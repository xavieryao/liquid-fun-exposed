/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_liquidfun_WRAP_H_
#define SWIG_liquidfun_WRAP_H_

class SwigDirector_Draw : public b2Draw, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Draw(JNIEnv *jenv);
    virtual ~SwigDirector_Draw();
    virtual void DrawPolygon(b2Vec2 const *vertices, int32 vertexCount, b2Color const &color);
    virtual void DrawSolidPolygon(b2Vec2 const *vertices, int32 vertexCount, b2Color const &color);
    virtual void DrawCircle(b2Vec2 const &center, float32 radius, b2Color const &color);
    virtual void DrawSolidCircle(b2Vec2 const &center, float32 radius, b2Vec2 const &axis, b2Color const &color);
    virtual void DrawParticles(b2Vec2 const *centers, float32 radius, b2ParticleColor const *colors, int32 count);
    virtual void DrawSegment(b2Vec2 const &p1, b2Vec2 const &p2, b2Color const &color);
    virtual void DrawTransform(b2Transform const &xf);
public:
    bool swig_overrides(int n) {
      return (n < 7 ? swig_override[n] : false);
    }
protected:
    bool swig_override[7];
};

class SwigDirector_QueryCallback : public b2QueryCallback, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_QueryCallback(JNIEnv *jenv);
    virtual ~SwigDirector_QueryCallback();
    virtual bool ReportFixture(b2Fixture *fixture);
    virtual bool ReportParticle(b2ParticleSystem const *particleSystem, int32 index);
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};


#endif
